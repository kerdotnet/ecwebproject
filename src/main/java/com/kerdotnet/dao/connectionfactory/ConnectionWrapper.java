package com.kerdotnet.dao.connectionfactory;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

public class ConnectionWrapper implements AutoCloseable{
    private Connection connection;
    private boolean isInTransaction;

    public ConnectionWrapper(Connection connection){
        this.connection = connection;
    }

    public void setAutoCommit(boolean autoCommit) throws SQLException {
        connection.setAutoCommit(autoCommit);
        isInTransaction = !autoCommit;
    }

    public void setTransactionIsolation(int transactionIsolation) throws SQLException {
        connection.setTransactionIsolation(transactionIsolation);
    }

    public void commit() throws SQLException {
        connection.commit();
        isInTransaction = false;
    }

    public void rollback() throws SQLException {
        connection.rollback();
        isInTransaction = false;
    }

    @Override
    public void close() throws SQLException {
        if (!isInTransaction) {
            connection.close();
        }
    }

    public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException {
        return connection.prepareStatement(sql, autoGeneratedKeys);
    }

    public PreparedStatement prepareStatement(String sql) throws SQLException {
        return connection.prepareStatement(sql);
    }

    public Statement createStatement() throws SQLException {
        return connection.createStatement();
    }

    public boolean isClosed() throws SQLException {
        return connection.isClosed();
    }

}
